name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
      
      - name: Setup Node.js ⚙️
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies 📦
        run: npm ci
      
      - name: Build Project 🔨
        run: npm run build
      
      - name: Prepare Assets 🖼️
        run: |
          mkdir -p dist/ttf dist/cursor dist/screens
          # Schriftarten herunterladen
          curl -s -o "dist/ttf/topaz.ttf" https://cdn.jsdelivr.net/gh/rewtnull/amigafonts/ttf/Topaz_a500_v1.0.ttf
          curl -s -o "dist/ttf/TopazPlus.ttf" https://cdn.jsdelivr.net/gh/rewtnull/amigafonts/ttf/TopazPlus_a1200_v1.0.ttf
          # Assets kopieren wenn vorhanden
          if [ -d "public/cursor" ]; then
            cp -r public/cursor/* dist/cursor/ || true
          fi
          if [ -d "public/screens" ]; then
            cp -r public/screens/* dist/screens/ || true
          fi
          if [ -f "public/favicon.ico" ]; then
            cp public/favicon.ico dist/ || true
          fi
          # Erstelle CNAME für benutzerdefinierte Domain
          # echo 'devmatrose.com' > dist/CNAME
          # .nojekyll für GitHub Pages erstellen
          touch dist/.nojekyll
      
      - name: Deploy to GitHub Pages 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          repository-name: ogerly/ogerly.github.io
          branch: main  # Bei User Pages muss der Branch 'main' oder 'master' heißen
          clean: true
          token: ${{ secrets.PERSONAL_TOKEN }}  # Benötigt einen PAT mit repo-Rechten
